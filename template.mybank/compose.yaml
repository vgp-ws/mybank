services:
  template:
    build:
     context: .
     dockerfile: Dockerfile
    depends_on:
      psql-template:
        condition: service_healthy
      keycloak:
        condition: service_healthy  

    image: tepmlate:latest
    command: java -jar -agentlib:jdwp=transport=dt_socket,address=*:8088,server=y,suspend=n template.mybank.jar
    
    environment:
      - DATASOURCE_URL=${DATASOURCE_URL}
      - DATASOURCE_USER=${DATASOURCE_USER}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
    ports:
      - "8080:8080"
      - "8088:8088"
    networks:
      - nest
      
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { java.net.URI uri = java.net.URI.create(args[0]); System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)uri.toURL().openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/health/live']
      interval: 5s
      timeout: 5s
      retries: 20
    depends_on:
      psql-keycloak:
        condition: service_healthy
    environment:
      - KC_HTTP_PORT=8100
      - KC_DB=postgres
      - KC_DB_URL=${KEYCLOAK_DB_URL} 
      - KC_HEALTH_ENABLED=true
      - KC_DB_USERNAME=${KEYCLOAK_DB_USERNAME} 
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD} 
    ports:
      - 8100:8100
      - 9000:9000
    volumes:
      - ../master-realm.json:/opt/keycloak/data/import/master-realm.json
    command: start-dev --import-realm
    networks:
      - nest

  psql-template:
    build:
      context: ../
      dockerfile: Dockerfile.psql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATASOURCE_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5      
    environment:
      - POSTGRES_USER=${DATASOURCE_USER}
      - POSTGRES_PASSWORD=${DATASOURCE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nest

  psql-keycloak:
    build:
      context: ../
      dockerfile: Dockerfile.keycloak.psql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KEYCLOAK_DB_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5      
    environment:
      - POSTGRES_USER=${KEYCLOAK_DB_USERNAME}
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_keycloak:/var/lib/postgresql/data
    networks:
      - nest

  consul:
    image: consul:1.15.4
    command: "agent -dev -client=0.0.0.0"
    ports:
      - "8500:8500"
    networks:
      - nest

volumes:
  postgres_data:
    external: false 
  postgres_data_keycloak:
    external: false

networks:
  nest:
